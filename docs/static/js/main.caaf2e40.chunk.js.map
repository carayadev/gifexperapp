{"version":3,"sources":["components/AddCategory.js","components/GifGridItems.js","helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","GifGridItems","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMA4BeA,EA1BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAevC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAjBgB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCJlBG,EAAe,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAErC,OACI,sBAAKC,UAAU,yCAAf,UACG,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCLHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,sDAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAYZY,GAZY,4CAAH,sDCEPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNjB,EAAQC,GACPiB,MAAK,SAAAC,GACEH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAEGc,EDd4BK,CAAanB,GAAjCU,EADsB,EAC3BJ,KAAaO,EADc,EACdA,QAEvB,OACI,qCACI,oBAAIjB,UAAU,yCAAd,SAAyDI,IACvDa,GAAW,mBAAGjB,UAAU,wCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACG,6BACMc,EAAOF,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAESA,GADAA,EAAIhB,eEXxB2B,EAAe,WAAO,IAAD,EACMzC,mBAAS,CAAC,aADhB,mBACvB0C,EADuB,KACX3C,EADW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BACM2C,EAAWb,KAAI,SAAAR,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MCX5BsB,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.caaf2e40.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst AddCategory = ({ setCategorias }) => {\n    const [inputValue, setInputValue] = useState('')\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategorias(categ => [inputValue, ...categ]); \n            setInputValue('');\n        } \n\n\n    }\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n              type='text'\n              value={ inputValue }\n              onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nexport default AddCategory\n\n","import React from 'react'\n\nexport const GifGridItems = ({id, title, url}) => {\n    //console.log(props)\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n           <img src={ url } alt={ title }/>\n           <p>{ title }</p>\n        </div>\n    )\n}\n","\n\nexport const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&api_key=oNW1sq5uKE5FGJekohjUPPNMDufse3Dq`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs\n}\n","import React from 'react'\nimport { GifGridItems } from './GifGridItems'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n      const { data:images, loading } = useFetchGifs(category);\n    \n    return (\n        <>\n            <h3 className='card animate__animated animate__fadeIn'>{ category }</h3>\n            { loading && <p className='card animate__animated animate__flash'>Loading</p> }\n             <div className='card-grid'>\n                <ol>\n                    { images.map(img => (\n                        <GifGridItems \n                            key={img.id}\n                            { ...img }\n                        />\n                    ))}\n                </ol>\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/GetGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n        .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n        })\n    }, [category]) \n\n    return state;\n    }\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n    const [categorias, setCategorias] = useState(['One Push'])\n    //const categorias = ['One Push', 'Samurai X', 'Dragon Ball']\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategorias={  setCategorias }/>\n            <hr />\n            <ol>\n                { categorias.map(category => (\n                    <GifGrid \n                      key={ category }\n                      category={ category }\n                    \n                    />\n                ))}\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp.js';\nimport './index.css';\n\nReactDOM.render(\n    //<App />,\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}